/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.93.0
  Forc version: 0.62.0
  Fuel-Core version: 0.31.0
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
  StrSlice,
} from 'fuels';

import type { Enum } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export type InvalidErrorInput = Enum<{ IncorrectAssetId: AssetIdInput, NotEnoughTokens: BigNumberish, OnlyOwner: IdentityInput }>;
export type InvalidErrorOutput = Enum<{ IncorrectAssetId: AssetIdOutput, NotEnoughTokens: BN, OnlyOwner: IdentityOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type ItemInput = { id: BigNumberish, price: BigNumberish, owner: IdentityInput, metadata: string, total_bought: BigNumberish };
export type ItemOutput = { id: BN, price: BN, owner: IdentityOutput, metadata: string, total_bought: BN };

export interface ContractAbiInterface extends Interface {
  functions: {
    buy_item: FunctionFragment;
    get_count: FunctionFragment;
    get_item: FunctionFragment;
    initialize_owner: FunctionFragment;
    list_item: FunctionFragment;
    withdraw_funds: FunctionFragment;
  };
}

export class ContractAbi extends Contract {
  interface: ContractAbiInterface;
  functions: {
    buy_item: InvokeFunction<[item_id: BigNumberish], void>;
    get_count: InvokeFunction<[], BN>;
    get_item: InvokeFunction<[item_id: BigNumberish], ItemOutput>;
    initialize_owner: InvokeFunction<[], IdentityOutput>;
    list_item: InvokeFunction<[price: BigNumberish, metadata: string], void>;
    withdraw_funds: InvokeFunction<[], void>;
  };
}
